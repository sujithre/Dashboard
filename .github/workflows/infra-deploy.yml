name: Infrastructure Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_WORKSPACE: "dev"

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.0"

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      run: terraform apply -auto-approve
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    - name: Get Terraform Outputs
      if: success() && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      id: terraform_outputs
      run: |
        echo "acr_login_server=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV
        echo "container_app_url=$(terraform output -raw container_app_url)" >> $GITHUB_ENV
